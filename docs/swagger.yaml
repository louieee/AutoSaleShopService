basePath: /api/v1
definitions:
  controllers.AccessTokenRequest:
    properties:
      refreshToken:
        type: string
    type: object
  controllers.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  controllers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  controllers.TokenResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  helpers.APIFailure:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  models.BasicUserDataType:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: A shop service used to manage sales
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://tos.santoshk.dev
  title: Shop Service
  version: "1.0"
paths:
  /auth/accessToken/:
    post:
      parameters:
      - description: Refresh Token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.AccessTokenRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TokenResponse'
      summary: allows a user to get a new access token from your refresh token
      tags:
      - auth
  /auth/login/:
    post:
      parameters:
      - description: Login Credential
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TokenResponse'
      summary: allows a user to login
      tags:
      - auth
  /users/:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BasicUserDataType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.APIFailure'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helpers.APIFailure'
      summary: retrieves a user
      tags:
      - users
    post:
      parameters:
      - description: user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateUserRequest'
      responses: {}
      summary: creates a user
      tags:
      - users
security:
- Bearer: []
securityDefinitions:
  Bearer:
    description: This is used to authorize the authentication
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
